#include "../Vector.cpp"

namespace Math
{
    template class Vector<unsigned int>;

    template Vector<unsigned int> operator+(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> operator+(const Vector<unsigned int>& v, const unsigned int& alpha);
    template Vector<unsigned int> operator+(const unsigned int& alpha, const Vector<unsigned int>& v);
    template Vector<unsigned int> operator-(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> operator-(const Vector<unsigned int>& v, const unsigned int& alpha);
    template Vector<unsigned int> operator-(const unsigned int& alpha, const Vector<unsigned int>& v);
    template Vector<unsigned int> operator*(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> operator*(const Vector<unsigned int>& v, const unsigned int& alpha);
    template Vector<unsigned int> operator*(const unsigned int& alpha, const Vector<unsigned int>& v);
    template Vector<unsigned int> operator/(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> operator/(const Vector<unsigned int>& v, const unsigned int& alpha);
    template Vector<unsigned int> operator/(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator<(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator<(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator<(const Vector<unsigned int>& v, const Vector<unsigned int>& w); 
    template bool operator<=(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator<=(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator<=(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template bool operator>(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator>(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator>(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template bool operator>=(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator>=(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator>=(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template bool operator==(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template bool operator==(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator==(const unsigned int& alpha, const Vector<unsigned int>& v);
    template bool operator!=(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template bool operator!=(const Vector<unsigned int>& v, const unsigned int& alpha);
    template bool operator!=(const unsigned int& alpha, const Vector<unsigned int>& v);
    template Vector<unsigned int> operator&(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> operator&(const Vector<unsigned int>& v, const unsigned int& alpha);
    template Vector<unsigned int> operator&(const unsigned int& alpha, const Vector<unsigned int>& v);
    template unsigned int operator|(const Vector<unsigned int>& v, const Vector<unsigned int>& w);    
    template unsigned int vector_product_2d(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template Vector<unsigned int> vector_product_3d(const Vector<unsigned int>& v, const Vector<unsigned int>& w);
    template std::ostream& Math::operator<< <unsigned int>(std::ostream&os, const Vector<unsigned int>& v);    

    template unsigned int min(const Vector<unsigned int>& v);
    template unsigned int max(const Vector<unsigned int>& v);
    template unsigned int sum(const Vector<unsigned int>& v);
    template unsigned int multiply(const Vector<unsigned int>& v);

    template Vector<unsigned int> cos(const Vector<unsigned int>& v);    
    template Vector<unsigned int> sin(const Vector<unsigned int>& v);    
    template Vector<unsigned int> tan(const Vector<unsigned int>& v);
    template Vector<unsigned int> acos(const Vector<unsigned int>& v);    
    template Vector<unsigned int> asin(const Vector<unsigned int>& v);    
    template Vector<unsigned int> atan(const Vector<unsigned int>& v);    
    template Vector<unsigned int> atan2(const unsigned int v, const Vector<unsigned int>& w);    
    template Vector<unsigned int> atan2(const Vector<unsigned int>& v, const unsigned int w);    
    template Vector<unsigned int> atan2(const Vector<unsigned int>& v, const Vector<unsigned int>& w);    
    template Vector<unsigned int> cosh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> sinh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> tanh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> acosh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> asinh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> atanh(const Vector<unsigned int>& v);    
    template Vector<unsigned int> exp(const Vector<unsigned int>& v);    
    template Vector<unsigned int> frexp(const Vector<unsigned int>& v, Vector<int>* exp);    
    template Vector<unsigned int> ldexp(const Vector<unsigned int>& v, const int exp);    
    template Vector<unsigned int> ldexp(const Vector<unsigned int>& v, const Vector<int>& exp);    
    template Vector<unsigned int> log(const Vector<unsigned int>& v);    
    template Vector<unsigned int> log10(const Vector<unsigned int>& v);    
    // template Vector<unsigned int> modf(const Vector<unsigned int>& v, Vector<unsigned int>* intpart);    
    template Vector<unsigned int> exp2(const Vector<unsigned int>& v);    
    template Vector<unsigned int> expm1(const Vector<unsigned int>& v);    
    template Vector<unsigned int> ilogb(const Vector<unsigned int>& v);    
    template Vector<unsigned int> log1p(const Vector<unsigned int>& v);    
    template Vector<unsigned int> log2(const Vector<unsigned int>& v);    
    template Vector<unsigned int> logb(const Vector<unsigned int>& v);    
    template Vector<unsigned int> scalbn(const Vector<unsigned int>& v, const int n);    
    template Vector<unsigned int> scalbn(const Vector<unsigned int>& v, const Vector<int>& n);    
    template Vector<unsigned int> scalbln(const Vector<unsigned int>& v, const long int n);    
    template Vector<unsigned int> pow(const unsigned int v, const Vector<unsigned int>& exponent);    
    template Vector<unsigned int> pow(const Vector<unsigned int>& v, const unsigned int exponent);    
    template Vector<unsigned int> pow(const Vector<unsigned int>& v, const Vector<unsigned int>& exponent);    
    template Vector<unsigned int> sqrt(const Vector<unsigned int>& v);    
    template Vector<unsigned int> cbrt(const Vector<unsigned int>& v);    
    template Vector<unsigned int> hypot(const unsigned int x, const Vector<unsigned int>& y);    
    template Vector<unsigned int> hypot(const Vector<unsigned int>& x, const unsigned int y);    
    template Vector<unsigned int> hypot(const Vector<unsigned int>& x, const Vector<unsigned int>& y);    
    template Vector<unsigned int> erf(const Vector<unsigned int>& v);    
    template Vector<unsigned int> erfc(const Vector<unsigned int>& v);    
    template Vector<unsigned int> tgamma(const Vector<unsigned int>& v);    
    template Vector<unsigned int> lgamma(const Vector<unsigned int>& v);    
    template Vector<unsigned int> ceil(const Vector<unsigned int>& v);    
    template Vector<unsigned int> floor(const Vector<unsigned int>& v);    
    template Vector<unsigned int> fmod(const unsigned int numer, const Vector<unsigned int>& denom);    
    template Vector<unsigned int> fmod(const Vector<unsigned int>& numer, const unsigned int denom);    
    template Vector<unsigned int> fmod(const Vector<unsigned int>& numer, const Vector<unsigned int>& denom);    
    template Vector<unsigned int> trunc(const Vector<unsigned int>& v);    
    template Vector<unsigned int> round(const Vector<unsigned int>& v);    
    template Vector<long int> lround(const Vector<unsigned int>& v);    
    template Vector<long long int> llround(const Vector<unsigned int>& v);    
    template Vector<unsigned int> rint(const Vector<unsigned int>& v);    
    template Vector<long int> lrint(const Vector<unsigned int>& v);
    template Vector<long long int> llrint(const Vector<unsigned int>& v);    
    template Vector<unsigned int> nearbyint(const Vector<unsigned int>& v);    
    template Vector<unsigned int> remainder(const unsigned int numer, const Vector<unsigned int>& denom);    
    template Vector<unsigned int> remainder(const Vector<unsigned int>& numer, const unsigned int denom);    
    template Vector<unsigned int> remainder(const Vector<unsigned int>& numer, const Vector<unsigned int>& denom);    
    template Vector<unsigned int> remquo(const unsigned int numer, const Vector<unsigned int>& denom, Vector<int>* quot);    
    template Vector<unsigned int> remquo(const Vector<unsigned int>& numer, const unsigned int denom, Vector<int>* quot);    
    template Vector<unsigned int> remquo(const Vector<unsigned int>& numer, const Vector<unsigned int>& denom, Vector<int>* quot);    
    template Vector<unsigned int> copysign(const Vector<unsigned int>& x, const unsigned int y);    
    template Vector<unsigned int> copysign(const Vector<unsigned int>& x, const Vector<unsigned int>& y);    
    template Vector<unsigned int> nan(const unsigned int N, const char* tagp);
    template Vector<unsigned int> nextafter(const Vector<unsigned int>& x, const Vector<unsigned int>& y);
    template Vector<unsigned int> fdim(const unsigned int x, const Vector<unsigned int>& y);    
    template Vector<unsigned int> fdim(const Vector<unsigned int>& x, unsigned int y);    
    template Vector<unsigned int> fdim(const Vector<unsigned int>& x, const Vector<unsigned int>& y);    
    template Vector<unsigned int> fabs(const Vector<unsigned int>& v);    
    // template Vector<unsigned int> abs(const Vector<unsigned int>& v);    
    template Vector<unsigned int> fma(const unsigned int x, const Vector<unsigned int>& y, const Vector<unsigned int>& z);    
    template Vector<unsigned int> fma(const Vector<unsigned int>& x, const unsigned int y, const Vector<unsigned int>& z);    
    template Vector<unsigned int> fma(const Vector<unsigned int>& x, const Vector<unsigned int>& y, const unsigned int z);    
    template Vector<unsigned int> fma(const unsigned int x, const unsigned int y, const Vector<unsigned int>& z);    
    template Vector<unsigned int> fma(const unsigned int x, const Vector<unsigned int>& y, const unsigned int z);    
    template Vector<unsigned int> fma(const Vector<unsigned int>& x, const unsigned int y, const unsigned int z);    
    template Vector<unsigned int> fma(const Vector<unsigned int>& x, const Vector<unsigned int>& y, const Vector<unsigned int>& z);    
    template Vector<int> fpclassify(const Vector<unsigned int>& v);    
    template bool isfinite(const Vector<unsigned int>& v);    
    template bool isinf(const Vector<unsigned int>& v);    
    template bool isnan(const Vector<unsigned int>& v);    
    template bool isnormal(const Vector<unsigned int>& v);    
}
