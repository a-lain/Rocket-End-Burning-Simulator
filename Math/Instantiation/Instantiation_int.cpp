#include "../Vector.cpp"

namespace Math
{
    template class Vector<int>;

    template Vector<int> operator+(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> operator+(const Vector<int>& v, const int& alpha);
    template Vector<int> operator+(const int& alpha, const Vector<int>& v);
    template Vector<int> operator-(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> operator-(const Vector<int>& v, const int& alpha);
    template Vector<int> operator-(const int& alpha, const Vector<int>& v);
    template Vector<int> operator*(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> operator*(const Vector<int>& v, const int& alpha);
    template Vector<int> operator*(const int& alpha, const Vector<int>& v);
    template Vector<int> operator/(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> operator/(const Vector<int>& v, const int& alpha);
    template Vector<int> operator/(const int& alpha, const Vector<int>& v);
    template bool operator<(const Vector<int>& v, const int& alpha);
    template bool operator<(const int& alpha, const Vector<int>& v);
    template bool operator<(const Vector<int>& v, const Vector<int>& w); 
    template bool operator<=(const Vector<int>& v, const int& alpha);
    template bool operator<=(const int& alpha, const Vector<int>& v);
    template bool operator<=(const Vector<int>& v, const Vector<int>& w);
    template bool operator>(const Vector<int>& v, const int& alpha);
    template bool operator>(const int& alpha, const Vector<int>& v);
    template bool operator>(const Vector<int>& v, const Vector<int>& w);
    template bool operator>=(const Vector<int>& v, const int& alpha);
    template bool operator>=(const int& alpha, const Vector<int>& v);
    template bool operator>=(const Vector<int>& v, const Vector<int>& w);
    template bool operator==(const Vector<int>& v, const Vector<int>& w);
    template bool operator==(const Vector<int>& v, const int& alpha);
    template bool operator==(const int& alpha, const Vector<int>& v);
    template bool operator!=(const Vector<int>& v, const Vector<int>& w);
    template bool operator!=(const Vector<int>& v, const int& alpha);
    template bool operator!=(const int& alpha, const Vector<int>& v);
    template Vector<int> operator&(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> operator&(const Vector<int>& v, const int& alpha);
    template Vector<int> operator&(const int& alpha, const Vector<int>& v);
    template int operator|(const Vector<int>& v, const Vector<int>& w);    
    template int vector_product_2d(const Vector<int>& v, const Vector<int>& w);
    template Vector<int> vector_product_3d(const Vector<int>& v, const Vector<int>& w);
    template std::ostream& Math::operator<< <int>(std::ostream&os, const Vector<int>& v);    

    template int min(const Vector<int>& v);
    template int max(const Vector<int>& v);
    template int sum(const Vector<int>& v);
    template int multiply(const Vector<int>& v);

    template Vector<int> cos(const Vector<int>& v);    
    template Vector<int> sin(const Vector<int>& v);    
    template Vector<int> tan(const Vector<int>& v);
    template Vector<int> acos(const Vector<int>& v);    
    template Vector<int> asin(const Vector<int>& v);    
    template Vector<int> atan(const Vector<int>& v);    
    template Vector<int> atan2(const int v, const Vector<int>& w);    
    template Vector<int> atan2(const Vector<int>& v, const int w);    
    template Vector<int> atan2(const Vector<int>& v, const Vector<int>& w);    
    template Vector<int> cosh(const Vector<int>& v);    
    template Vector<int> sinh(const Vector<int>& v);    
    template Vector<int> tanh(const Vector<int>& v);    
    template Vector<int> acosh(const Vector<int>& v);    
    template Vector<int> asinh(const Vector<int>& v);    
    template Vector<int> atanh(const Vector<int>& v);    
    template Vector<int> exp(const Vector<int>& v);    
    template Vector<int> frexp(const Vector<int>& v, Vector<int>* exp);    
    template Vector<int> ldexp(const Vector<int>& v, const int exp);    
    template Vector<int> ldexp(const Vector<int>& v, const Vector<int>& exp);    
    template Vector<int> log(const Vector<int>& v);    
    template Vector<int> log10(const Vector<int>& v);    
    // template Vector<int> modf(const Vector<int>& v, Vector<int>* intpart);    
    template Vector<int> exp2(const Vector<int>& v);    
    template Vector<int> expm1(const Vector<int>& v);    
    template Vector<int> ilogb(const Vector<int>& v);    
    template Vector<int> log1p(const Vector<int>& v);    
    template Vector<int> log2(const Vector<int>& v);    
    template Vector<int> logb(const Vector<int>& v);    
    template Vector<int> scalbn(const Vector<int>& v, const int n);    
    template Vector<int> scalbn(const Vector<int>& v, const Vector<int>& n);    
    template Vector<int> scalbln(const Vector<int>& v, const long int n);    
    template Vector<int> pow(const int v, const Vector<int>& exponent);    
    template Vector<int> pow(const Vector<int>& v, const int exponent);    
    template Vector<int> pow(const Vector<int>& v, const Vector<int>& exponent);    
    template Vector<int> sqrt(const Vector<int>& v);    
    template Vector<int> cbrt(const Vector<int>& v);    
    template Vector<int> hypot(const int x, const Vector<int>& y);    
    template Vector<int> hypot(const Vector<int>& x, const int y);    
    template Vector<int> hypot(const Vector<int>& x, const Vector<int>& y);    
    template Vector<int> erf(const Vector<int>& v);    
    template Vector<int> erfc(const Vector<int>& v);    
    template Vector<int> tgamma(const Vector<int>& v);    
    template Vector<int> lgamma(const Vector<int>& v);    
    template Vector<int> ceil(const Vector<int>& v);    
    template Vector<int> floor(const Vector<int>& v);    
    template Vector<int> fmod(const int numer, const Vector<int>& denom);    
    template Vector<int> fmod(const Vector<int>& numer, const int denom);    
    template Vector<int> fmod(const Vector<int>& numer, const Vector<int>& denom);    
    template Vector<int> trunc(const Vector<int>& v);    
    template Vector<int> round(const Vector<int>& v);    
    template Vector<long int> lround(const Vector<int>& v);    
    template Vector<long long int> llround(const Vector<int>& v);    
    template Vector<int> rint(const Vector<int>& v);    
    template Vector<long int> lrint(const Vector<int>& v);
    template Vector<long long int> llrint(const Vector<int>& v);    
    template Vector<int> nearbyint(const Vector<int>& v);    
    template Vector<int> remainder(const int numer, const Vector<int>& denom);    
    template Vector<int> remainder(const Vector<int>& numer, const int denom);    
    template Vector<int> remainder(const Vector<int>& numer, const Vector<int>& denom);    
    template Vector<int> remquo(const int numer, const Vector<int>& denom, Vector<int>* quot);    
    template Vector<int> remquo(const Vector<int>& numer, const int denom, Vector<int>* quot);    
    template Vector<int> remquo(const Vector<int>& numer, const Vector<int>& denom, Vector<int>* quot);    
    template Vector<int> copysign(const Vector<int>& x, const int y);    
    template Vector<int> copysign(const Vector<int>& x, const Vector<int>& y);    
    template Vector<int> nan(const unsigned int N, const char* tagp);
    template Vector<int> nextafter(const Vector<int>& x, const Vector<int>& y);
    template Vector<int> fdim(const int x, const Vector<int>& y);    
    template Vector<int> fdim(const Vector<int>& x, int y);    
    template Vector<int> fdim(const Vector<int>& x, const Vector<int>& y);    
    template Vector<int> fabs(const Vector<int>& v);    
    // template Vector<int> abs(const Vector<int>& v);    
    template Vector<int> fma(const int x, const Vector<int>& y, const Vector<int>& z);    
    template Vector<int> fma(const Vector<int>& x, const int y, const Vector<int>& z);    
    template Vector<int> fma(const Vector<int>& x, const Vector<int>& y, const int z);    
    template Vector<int> fma(const int x, const int y, const Vector<int>& z);    
    template Vector<int> fma(const int x, const Vector<int>& y, const int z);    
    template Vector<int> fma(const Vector<int>& x, const int y, const int z);    
    template Vector<int> fma(const Vector<int>& x, const Vector<int>& y, const Vector<int>& z);    
    template Vector<int> fpclassify(const Vector<int>& v);    
    template bool isfinite(const Vector<int>& v);    
    template bool isinf(const Vector<int>& v);    
    template bool isnan(const Vector<int>& v);    
    template bool isnormal(const Vector<int>& v);    
}
